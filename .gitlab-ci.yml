stages:
  # - integration_tests
  - build
  - release
  - deploy_staging
  # - deploy_production
image: docker:stable
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "" # HOTFIX?
  ANSIBLE_HOST_KEY_CHECKING: 'false'
  ANSIBLE_FORCE_COLOR: 'true'  

services:
  - docker:dind
# integration_tests:
#   stage: integration_tests
#   tags:
#     - lightning_spot_runners
#   image: docker/compose:latest
#   rules:
#     - if: '$CI_COMMIT_REF_NAME != "develop" && $CI_COMMIT_REF_NAME != "main" &&  $CI_PIPELINE_SOURCE == "merge_request_event"'
#       changes:
#         - "src/**/*"
#         - "FundsManager.sln"
#         - ".gitlab-ci.yml"

#   script:
#     - mkdir /tmp/polar
#     - unzip ./btcpayserver-clovr.polar.zip -d /tmp/polar
#     - mkdir ./test/volumes
#     - cp -r /tmp/polar/volumes ./test/
#     - cd test
#     - chown 1000:1000 ./volumes -R
#     - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
#     - docker-compose up --exit-code-from integrationtestsrunner

build:
  stage: build
  tags:
    - lightning_spot_runners
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/clovrlabs/lightningnetwork/fundsmanager:$CI_COMMIT_REF_NAME -f ./src/Dockerfile .
    - docker push registry.gitlab.com/clovrlabs/lightningnetwork/fundsmanager:$CI_COMMIT_REF_NAME
  rules:
    - if: '($CI_COMMIT_REF_NAME == "main" && $CI_COMMIT_TAG =~ "^([0-9]+)\.([0-9]+)\.([0-9]+)$") || $CI_COMMIT_REF_NAME == "develop" &&  $CI_PIPELINE_SOURCE != "merge_request_event"' 
      changes:
        - "src/**/*"
        - "FundsManager.sln"
        - ".gitlab-ci.yml"

release:
  stage: release
  tags:
    - lightning_spot_runners
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t ${CI_REGISTRY_IMAGE}:$CI_COMMIT_REF_NAME -f ./src/Dockerfile .
    - docker push ${CI_REGISTRY_IMAGE}:$CI_COMMIT_REF_NAME
  only:
    - tags




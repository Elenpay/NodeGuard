<Modal @ref="@_modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>@Title</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @((MarkupString)Body)
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@OnCancel">@CancelLabel</Button>
            @if (OnSubmit.HasDelegate) {
                <Button Color="Color.Primary" Clicked="@OnSubmit">
                    @OkLabel
                </Button>
            }
                </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter, EditorRequired]
    public string Title { get; set; } = "";

    [Parameter, EditorRequired]
    public string Body { get; set; } = "";

    [Parameter]
    public string CancelLabel { get; set; } = "Cancel";

    [Parameter] 
    public string OkLabel { get; set; } = "Ok";

    private Modal? _modalRef { get; set; }

    [Parameter, EditorRequired]
    public EventCallback OnCancel { get; set; }
    [Parameter]
    public EventCallback OnSubmit { get; set; }

    public async Task CloseModal()
    {
        await _modalRef.Close(CloseReason.UserClosing);
    }

    public async Task ShowModal()
    {
        await _modalRef.Show();
    }
}
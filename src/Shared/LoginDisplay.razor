/*
 * NodeGuard
 * Copyright (C) 2023  ClovrLabs
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

ï»¿@using System.Security.Claims
@using Humanizer
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
<AuthorizeView>
    <Authorized>

        @{
            foreach (var role in _roles)
            {
                if (role == ApplicationUserRole.Superadmin.ToString("G"))
                {
                    <h6 class="badge badge-super ">@ApplicationUserRole.Superadmin.ToString("G").Humanize(LetterCasing.Title)</h6>
                }
                else if (role == ApplicationUserRole.NodeManager.ToString("G"))
                {
                    <h6 class="badge badge-node">@ApplicationUserRole.NodeManager.ToString("G").Humanize(LetterCasing.Title)</h6>
                }
                else
                {
                    <h6 class="badge badge-finance">@ApplicationUserRole.FinanceManager.ToString("G").Humanize(LetterCasing.Title)</h6>
                    <Button Color="Color.Info" Size="Size.Small" Clicked="@(() => NavigationManager.NavigateTo("/keys"))">My keys</Button>
                }
            }
        }

        <a href="Identity/Account/Manage" class="hello">Hello, @context.User.Identity?.Name!</a>
        <form method="post" action="Identity/Account/LogOut">
            <button type="submit" class="nav-link btn btn-link btn-logout">Log out</button>
        </form>
    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>
@code
{
    [CascadingParameter]
    private ApplicationUser LoggedUser { get; set; }

    private List<string> _roles = new();

    protected override async Task OnInitializedAsync()
    {
        if (LoggedUser != null) _roles = (await UserManager.GetRolesAsync(LoggedUser)).ToList();
    }
}
